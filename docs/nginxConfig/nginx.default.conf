user  www www;
worker_processes auto;
error_log  /www/wwwlogs/nginx_error.log  crit;
pid        /www/server/nginx/logs/nginx.pid;
worker_rlimit_nofile 51200;

stream {
    log_format tcp_format '$time_local|$remote_addr|$protocol|$status|$bytes_sent|$bytes_received|$session_time|$upstream_addr|$upstream_bytes_sent|$upstream_bytes_received|$upstream_connect_time';
    access_log /www/wwwlogs/tcp-access.log tcp_format;
    error_log /www/wwwlogs/tcp-error.log;
    include /www/server/panel/vhost/nginx/tcp/*.conf;
}

events {
    use epoll;
    worker_connections 51200;
    multi_accept on;
}

http {
    include       mime.types;
    #include luawaf.conf;

    include proxy.conf;

    # default_type  application/octet-stream;

    server_names_hash_bucket_size 512;
    client_header_buffer_size 32k;
    large_client_header_buffers 4 32k;
    client_max_body_size 50m;

    sendfile   on;
    tcp_nopush on;

    keepalive_timeout 60;

    tcp_nodelay on;

    fastcgi_connect_timeout 300;
    fastcgi_send_timeout 300;
    fastcgi_read_timeout 300;
    fastcgi_buffer_size 64k;
    fastcgi_buffers 4 64k;
    fastcgi_busy_buffers_size 128k;
    fastcgi_temp_file_write_size 256k;
    fastcgi_intercept_errors on;

    gzip on;
    gzip_min_length  1k;
    gzip_buffers     4 16k;
    gzip_http_version 1.1;
    gzip_comp_level 2;
    gzip_types     text/plain application/javascript application/x-javascript text/javascript text/css application/xml;
    gzip_vary on;
    gzip_proxied   expired no-cache no-store private auth;
    gzip_disable   "MSIE [1-6]\.";

    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;

    server_tokens off;
    access_log off;
    
    # # nodeserver
    # server {
    #     listen 80;
    #     server_name nodeserver.cchang.fun;
        
    #     location / {
    #         proxy_pass http://127.0.0.1:3003;
    #     }
    # }
    # server {
    #     #SSL 默认访问端口号为 443
    #     listen 443 ssl; 
    #     #请填写绑定证书的域名
    #     server_name nodeserver.cchang.fun; 
    #     #请填写证书文件的相对路径或绝对路径
    #     ssl_certificate /www/server/nginx/sslkey/nodeserver.cchang.fun_bundle.crt; 
    #     #请填写私钥文件的相对路径或绝对路径
    #     ssl_certificate_key /www/server/nginx/sslkey/nodeserver.cchang.fun.key; 
    #     ssl_session_timeout 5m;
    #     #请按照以下协议配置
    #     ssl_protocols TLSv1.2 TLSv1.3; 
    #     #请按照以下套件配置，配置加密套件，写法遵循 openssl 标准。
    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE; 
    #     ssl_prefer_server_ciphers on;

    #     location ^~ / {
    #         proxy_pass http://127.0.0.1:3003;  # 将请求代理到php的后端服务器
    #         proxy_set_header Host $host; 
    #     }
    # }

    # # admin
    # server {
    #     listen 80;
    #     server_name admin.cchang.fun;

    #     location ~ ^/basic-api/ten-api/(.*)$ {
    #         proxy_pass https://tenapi.cn/$1;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #     }
        
    #     location / {
    #         root /www/server/nginx/html/newStartVue;
    #         add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    #         try_files $uri $uri/ /index.html;   
    #     }
        
    # }
    # server {
    #     #SSL 默认访问端口号为 443
    #     listen 443 ssl; 
    #     #请填写绑定证书的域名
    #     server_name admin.cchang.fun; 
    #     #请填写证书文件的相对路径或绝对路径
    #     ssl_certificate /www/server/nginx/sslkey/admin.cchang.fun_bundle.crt; 
    #     #请填写私钥文件的相对路径或绝对路径
    #     ssl_certificate_key /www/server/nginx/sslkey/admin.cchang.fun.key; 
    #     ssl_session_timeout 5m;
    #     #请按照以下协议配置
    #     ssl_protocols TLSv1.2 TLSv1.3; 
    #     #请按照以下套件配置，配置加密套件，写法遵循 openssl 标准。
    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE; 
    #     ssl_prefer_server_ciphers on;

    #     location ^~ / {
    #         root /www/server/nginx/html/newStartVue;
    #         add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    #         try_files $uri $uri/ /index.html;   
    #     }
    # }

    # # radmin
    # server {
    #     listen 80;
    #     server_name radmin.cchang.fun;
        
    #     location / {
    #         root /www/server/nginx/html/react-admin/dist;
    #         add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    #         try_files $uri $uri/ /index.html;   
    #     }
        
    # }
    # server {
    #     #SSL 默认访问端口号为 443
    #     listen 443 ssl; 
    #     #请填写绑定证书的域名
    #     server_name radmin.cchang.fun; 
    #     #请填写证书文件的相对路径或绝对路径
    #     ssl_certificate /www/server/nginx/sslkey/radmin.cchang.fun_bundle.crt; 
    #     #请填写私钥文件的相对路径或绝对路径
    #     ssl_certificate_key /www/server/nginx/sslkey/radmin.cchang.fun.key; 
    #     ssl_session_timeout 5m;
    #     #请按照以下协议配置
    #     ssl_protocols TLSv1.2 TLSv1.3; 
    #     #请按照以下套件配置，配置加密套件，写法遵循 openssl 标准。
    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE; 
    #     ssl_prefer_server_ciphers on;

    #     location ^~ / {
    #         root /www/server/nginx/html/react-admin/dist;
    #         add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    #         try_files $uri $uri/ /index.html;   
    #     }
    # }


    #################### php.erhang.fun 配置 ####################

    # # HTTP 配置，重定向到 HTTPS
    # server {
    #     listen 80;
    #     server_name php.erhang.fun;

    #     # 强制重定向到 HTTPS
    #     return 301 https://$host$request_uri;

    #     access_log /www/wwwlogs/php.erhang.fun.log;
    #     error_log /www/wwwlogs/php.erhang.fun.error.log;
    # }

    # # HTTPS 配置（php.erhang.fun）
    # server {
    #     listen 443 ssl;
    #     server_name php.erhang.fun;

    #     # SSL证书路径
    #     ssl_certificate /www/server/nginx/sslkey/erhang/php.erhang.fun_bundle.crt;
    #     ssl_certificate_key /www/server/nginx/sslkey/erhang/php.erhang.fun.key;

    #     # SSL 会话和协议配置
    #     ssl_session_timeout 5m;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
    #     ssl_prefer_server_ciphers on;
    #     ssl_stapling on;
    #     ssl_stapling_verify on;

    #     # 处理静态文件
    #     location / {
    #         root /www/wwwroot/phpErhangFun/;
    #         try_files $uri $uri/ /index.php?$query_string;
    #     }

    #     # 处理 PHP 请求
    #     location ~ \.php$ {
    #         include fastcgi_params;
    #         fastcgi_pass 127.0.0.1:9000;  # PHP-FPM 地址
    #         fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    #         fastcgi_param DOCUMENT_ROOT $document_root;
    #         fastcgi_intercept_errors on;
    #     }

    #     # 禁止访问敏感文件
    #     location ~ ^/(\.user.ini|\.htaccess|\.git|\.env|\.svn|\.project|LICENSE|README.md) {
    #         return 404;
    #     }

    #     # 一键申请 SSL 证书验证目录相关设置
    #     location ~ \.well-known {
    #         allow all;
    #     }

    #     # 禁止在证书验证目录放入敏感文件
    #     if ($uri ~ "^/\.well-known/.*\.(php|jsp|py|js|css|lua|ts|go|zip|tar\.gz|rar|7z|sql|bak)$") {
    #         return 403;
    #     }

    #     location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$
    #         {
    #             expires      30d;
    #             error_log /dev/null;
    #             access_log /dev/null;
    #         }
        
    #         location ~ .*\.(js|css)?$
    #         {
    #             expires      12h;
    #             error_log /dev/null;
    #             access_log /dev/null;
    #         }

    #     # 日志配置
    #     access_log /www/wwwlogs/php.erhang.fun.ssl.log;
    #     error_log /www/wwwlogs/php.erhang.fun.ssl.error.log;
    # }

    #################### www.erhang.fun 配置 ####################
    # HTTP 配置，重定向到 HTTPS
    server {
        listen 80;
        server_name www.erhang.fun;

        # 强制重定向到 HTTPS
        return 301 https://$host$request_uri;

        access_log /www/wwwlogs/www.erhang.fun.log;
        error_log /www/wwwlogs/www.erhang.fun.error.log;
    }

    # HTTPS 配置（www.erhang.fun）
    server {
        listen 443 ssl;
        server_name www.erhang.fun;

        # SSL证书路径
        ssl_certificate /www/server/nginx/sslkey/erhang/erhang.fun_bundle.crt;
        ssl_certificate_key /www/server/nginx/sslkey/erhang/erhang.fun.key;

        # SSL 会话和协议配置
        ssl_session_timeout 5m;
        ssl_session_cache shared:SSL:10m;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
        ssl_prefer_server_ciphers on;
        ssl_stapling on;
        ssl_stapling_verify on;

        # 处理静态文件
        location / {
            root /www/server/nginx/html/erhang-records/;
            # root /www/wwwroot/phpCchang/;
            add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
            try_files $uri $uri/ /erhang-records/index.html;
        }
        location ^~ /testPhp {
            proxy_pass http://127.0.0.1:888/;  # 将请求代理到php的后端服务器
            proxy_set_header Host $host; 
        }
        
        location ^~ /php {
            alias /www/server/phpmyadmin/;
            add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
            try_files $uri $uri/ /index.html;
        }

        # 禁止访问敏感文件
        location ~ ^/(\.user.ini|\.htaccess|\.git|\.env|\.svn|\.project|LICENSE|README.md) {
            return 404;
        }

        # 一键申请 SSL 证书验证目录相关设置
        location ~ \.well-known {
            allow all;
        }

        # 禁止在证书验证目录放入敏感文件
        if ($uri ~ "^/\.well-known/.*\.(php|jsp|py|js|css|lua|ts|go|zip|tar\.gz|rar|7z|sql|bak)$") {
            return 403;
        }

        # 日志配置
        access_log /www/wwwlogs/www.erhang.fun.ssl.log;
        error_log /www/wwwlogs/www.erhang.fun.ssl.error.log;
    }

    # mock
    server {
        listen  80;
        server_name mock.erhang.fun;

        location / {
            proxy_pass http://127.0.0.1:7300;
        }
    }
    server {
        #SSL 默认访问端口号为 443
        listen 443 ssl; 
        #请填写绑定证书的域名
        server_name mock.erhang.fun; 
        #请填写证书文件的相对路径或绝对路径
        ssl_certificate /www/server/nginx/sslkey/erhang/mock.erhang.fun_bundle.crt; 
        #请填写私钥文件的相对路径或绝对路径
        ssl_certificate_key /www/server/nginx/sslkey/erhang/mock.erhang.fun.key; 
        ssl_session_timeout 5m;
        #请按照以下协议配置
        ssl_protocols TLSv1.2 TLSv1.3; 
        #请按照以下套件配置，配置加密套件，写法遵循 openssl 标准。
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE; 
        ssl_prefer_server_ciphers on;

        location ^~ / {
            proxy_pass http://127.0.0.1:7300;  
            # 将请求代理到mock的服务
            proxy_set_header Host $host; 
        }
    }
    
    # # 宝塔 HTTP 重定向到 HTTPS
    # server {
    #     listen 80;
    #     server_name config.erhang.fun;
    #     return 301 https://$server_name$request_uri;
        
    #     # location / {
    #     #   proxy_pass http://127.0.0.1:7300;
    #     # }
    # }
    
    # # 宝塔 HTTPS 配置，代理到 8989 端口下的 /erhang 路径
    # server {
    #     listen 443 ssl http2; 
    #     server_name config.erhang.fun;
    
    #     # SSL 证书路径
    #     ssl_certificate /www/server/nginx/sslkey/erhang/config.erhang.fun_bundle.crt; 
    #     ssl_certificate_key /www/server/nginx/sslkey/erhang/config.erhang.fun.key; 
    
    #     # SSL 会话和协议配置
    #     ssl_session_timeout 5m;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_protocols TLSv1.2 TLSv1.3; 
    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE; 
    #     ssl_prefer_server_ciphers on;
    #     ssl_stapling on;
    #     ssl_stapling_verify on;
    
        
    #     # 将所有请求代理到 8989 端口下的 /erhang 路径
    #     location ^~ / {
    #         proxy_pass http://127.0.0.1:8989;
    #         # 保留主机头部等信息
    #         proxy_set_header Host $host; 
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
            
    #         # 避免超时问题，设置代理超时
    #         proxy_connect_timeout 160s;
    #         proxy_read_timeout 160s;
    #         proxy_send_timeout 160s;
    #     }
        
    #     location ^~ /testPhp {
    #         alias /www/server/phpmyadmin/;
    #         add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    #         try_files $uri $uri/ /index.html;
    #     }

    #     # 日志配置
    #     access_log /www/wwwlogs/config.erhang.fun.ssl.log;
    #     error_log /www/wwwlogs/config.erhang.fun.ssl.error.log;
    # }
    
    include /www/server/panel/vhost/nginx/*.conf;
}

