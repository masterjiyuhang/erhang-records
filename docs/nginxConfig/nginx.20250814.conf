user www www;
worker_processes auto;
error_log /www/wwwlogs/nginx_error.log crit;
pid /www/server/nginx/logs/nginx.pid;
worker_rlimit_nofile 51200;


events {
  use epoll;
  worker_connections 51200;
  multi_accept on;
}

http {
  include mime.types;
  default_type application/octet-stream;
  server_names_hash_bucket_size 512;
  client_max_body_size 50m;
  sendfile on;
  keepalive_timeout 60;
  gzip on;
  lua_package_path "/www/server/nginx/lib/lua/?.lua;;";

  # 1. 静态文件服务（原 erhang.fun）：用 80 端口
  server {
    listen 80;  # 公网 IP:80 访问静态文件
    # 无需 server_name（直接通过 IP 访问）

    location / {
      root /www/wwwroot/erhang-records/;
      index index.html;
      try_files $uri $uri/ /index.html;
    }

    # 禁止访问敏感文件
    location ~ ^/(\.user.ini|\.htaccess|\.git|\.env|\.svn|\.project|LICENSE|README.md) {
      return 404;
    }
  }

  # 2. Mock 服务（原 mock.erhang.fun）：用 81 端口
  server {
    listen 8081;  # 公网 IP:81 访问 Mock 服务

    location / {
      proxy_pass http://127.0.0.1:7300;  # 保持原代理地址
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;  # 可选：传递真实 IP
    }
  }

  # 3. 原 server.erhang.fun 服务：用 82 端口
  server {
    listen 8033;  # 公网 IP:82 访问该服务

    location / {
      proxy_pass http://127.0.0.1:3234;  # 保持原代理地址
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;  # 可选：传递真实 IP
    }
  }

  include /www/server/panel/vhost/nginx/*.conf;
}