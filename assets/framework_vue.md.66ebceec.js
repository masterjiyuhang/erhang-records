import{_ as a,o as e,c as t,O as o}from"./chunks/framework.2cb66d06.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"framework/vue.md","filePath":"framework/vue.md"}'),r={name:"framework/vue.md"},l=o('<h2 id="_1-vue2-和-vue3-有什么区别" tabindex="-1">1. vue2 和 vue3 有什么区别？ <a class="header-anchor" href="#_1-vue2-和-vue3-有什么区别" aria-label="Permalink to &quot;1. vue2 和 vue3 有什么区别？&quot;">​</a></h2><h3 id="_1-1-proxy-怎么解决的-define-property-的缺点" tabindex="-1">1.1 proxy 怎么解决的 define property 的缺点？ <a class="header-anchor" href="#_1-1-proxy-怎么解决的-define-property-的缺点" aria-label="Permalink to &quot;1.1 proxy 怎么解决的 define property 的缺点？&quot;">​</a></h3><h3 id="_1-2-vue3-相比较-vue2-的-diff-算法有哪些优化" tabindex="-1">1.2 vue3 相比较 vue2 的 diff 算法有哪些优化 <a class="header-anchor" href="#_1-2-vue3-相比较-vue2-的-diff-算法有哪些优化" aria-label="Permalink to &quot;1.2 vue3 相比较 vue2 的 diff 算法有哪些优化&quot;">​</a></h3><h3 id="_1-3-setup-语法糖-setup-函数相当于-vue2-里面的什么呢" tabindex="-1">1.3 setup 语法糖， setup 函数相当于 vue2 里面的什么呢？ <a class="header-anchor" href="#_1-3-setup-语法糖-setup-函数相当于-vue2-里面的什么呢" aria-label="Permalink to &quot;1.3 setup 语法糖， setup 函数相当于 vue2 里面的什么呢？&quot;">​</a></h3><h4 id="_1-3-1-setup-中怎么设置组件-name" tabindex="-1">1.3.1 setup 中怎么设置组件 name? <a class="header-anchor" href="#_1-3-1-setup-中怎么设置组件-name" aria-label="Permalink to &quot;1.3.1 setup 中怎么设置组件 name?&quot;">​</a></h4><h3 id="_1-4-reactive-和-shallow-reactive-有什么区别" tabindex="-1">1.4 reactive 和 shallow Reactive 有什么区别？ <a class="header-anchor" href="#_1-4-reactive-和-shallow-reactive-有什么区别" aria-label="Permalink to &quot;1.4 reactive 和 shallow Reactive 有什么区别？&quot;">​</a></h3><h3 id="_1-5-ref-torefs-isref-怎么使用" tabindex="-1">1.5 ref toRefs isRef 怎么使用? <a class="header-anchor" href="#_1-5-ref-torefs-isref-怎么使用" aria-label="Permalink to &quot;1.5 ref toRefs isRef 怎么使用?&quot;">​</a></h3><h3 id="_1-6-readonly-isreadonly-shallowreadonly-怎么使用" tabindex="-1">1.6 readonly isReadOnly shallowReadonly 怎么使用? <a class="header-anchor" href="#_1-6-readonly-isreadonly-shallowreadonly-怎么使用" aria-label="Permalink to &quot;1.6 readonly isReadOnly shallowReadonly 怎么使用?&quot;">​</a></h3><h4 id="_1-6-1-readonly-和-const-有什么区别" tabindex="-1">1.6.1 readonly 和 const 有什么区别？ <a class="header-anchor" href="#_1-6-1-readonly-和-const-有什么区别" aria-label="Permalink to &quot;1.6.1 readonly 和 const 有什么区别？&quot;">​</a></h4><p>const 是赋值保护，使用 const 定义的变量，该变量不能重新赋值。但如果 const 赋值的是对象，那么对象里面的东西是可以改的。原因是 const 定义的变量不能改说的是，对象对应的那个地址不能改变 而 readonly 是属性保护，不能给属性重新赋值</p><h3 id="_1-7-vue3-生命周期的变化" tabindex="-1">1.7 vue3 生命周期的变化？ <a class="header-anchor" href="#_1-7-vue3-生命周期的变化" aria-label="Permalink to &quot;1.7 vue3 生命周期的变化？&quot;">​</a></h3><h3 id="_1-8-组合式-api-和-选项式-api-的区别有哪些" tabindex="-1">1.8 组合式 api 和 选项式 api 的区别有哪些？ <a class="header-anchor" href="#_1-8-组合式-api-和-选项式-api-的区别有哪些" aria-label="Permalink to &quot;1.8 组合式 api 和 选项式 api 的区别有哪些？&quot;">​</a></h3><h3 id="_1-9-vue3-里面的-v-model-语法怎么实现。-对比-vue2-有区别吗" tabindex="-1">1.9 vue3 里面的 v-model 语法怎么实现。 对比 vue2 有区别吗？ <a class="header-anchor" href="#_1-9-vue3-里面的-v-model-语法怎么实现。-对比-vue2-有区别吗" aria-label="Permalink to &quot;1.9 vue3 里面的 v-model 语法怎么实现。 对比 vue2 有区别吗？&quot;">​</a></h3><h3 id="_1-10-组件通信的方式有哪些-两个版本有什么变化吗" tabindex="-1">1.10 组件通信的方式有哪些？ 两个版本有什么变化吗？ <a class="header-anchor" href="#_1-10-组件通信的方式有哪些-两个版本有什么变化吗" aria-label="Permalink to &quot;1.10 组件通信的方式有哪些？ 两个版本有什么变化吗？&quot;">​</a></h3><h3 id="_1-11-vue3-中父子传值-用-ts-怎么写-怎么设置默认值" tabindex="-1">1.11 Vue3 中父子传值 , 用 TS 怎么写，怎么设置默认值 <a class="header-anchor" href="#_1-11-vue3-中父子传值-用-ts-怎么写-怎么设置默认值" aria-label="Permalink to &quot;1.11 Vue3 中父子传值 , 用 TS 怎么写，怎么设置默认值&quot;">​</a></h3><h2 id="_2-watch-和-watcheffect-的区别" tabindex="-1">2. watch 和 watchEffect 的区别 <a class="header-anchor" href="#_2-watch-和-watcheffect-的区别" aria-label="Permalink to &quot;2. watch 和 watchEffect 的区别&quot;">​</a></h2><h2 id="_3-computed-和-watch-的区别" tabindex="-1">3. computed 和 watch 的区别 <a class="header-anchor" href="#_3-computed-和-watch-的区别" aria-label="Permalink to &quot;3. computed 和 watch 的区别&quot;">​</a></h2><h3 id="vue2" tabindex="-1">vue2 <a class="header-anchor" href="#vue2" aria-label="Permalink to &quot;vue2&quot;">​</a></h3><p>computed：</p><ul><li>computed 属性是一种依赖收集的属性，它根据其依赖的响应式数据进行计算，并返回计算结果。</li><li>computed 属性是基于它的依赖进行缓存的，只有依赖的响应式数据发生变化时，才会重新计算。computed 属性可以被当作普通的属性来使用。</li></ul><p>watch：</p><ul><li>watch 选项允许我们观察一个特定的数据源，并在数据发生变化时执行回调函数。</li><li>它可以用于监听单个数据的变化或监听多个数据的变化。</li><li>watch 选项通常用于监听数据的变化并执行一些异步或开销较大的操作。</li></ul><h3 id="vue3" tabindex="-1">vue3 <a class="header-anchor" href="#vue3" aria-label="Permalink to &quot;vue3&quot;">​</a></h3><p>computed：</p><ul><li>在 Vue 3 中，computed 属性的用法和 Vue 2 基本相同。</li><li>但是，Vue 3 对 computed 属性进行了一些性能优化，使得在某些情况下，computed 属性的计算速度更快。</li></ul><p>watch：</p><ul><li>Vue 3 中引入了一个新的 API，称为 watch 函数。</li><li>watch 函数提供了更灵活的监听选项，并可以使用函数式编程的方式进行处理。</li><li>它可以监听多个数据源的变化，并在数据发生变化时执行回调函数。</li><li>watch 函数还可以处理异步任务和批量更新的情况。</li></ul><h3 id="vue3-的-compute-相比较-vue2-做了哪些优化" tabindex="-1">vue3 的 compute 相比较 vue2 做了哪些优化 <a class="header-anchor" href="#vue3-的-compute-相比较-vue2-做了哪些优化" aria-label="Permalink to &quot;vue3 的 compute 相比较 vue2 做了哪些优化&quot;">​</a></h3><ul><li><p>缓存机制优化</p><ul><li>vue2 中 compute 无论依赖的值是否发生变化， 每次访问 computed 属性都会重新计算。 vue3 缓存机制进行了优化，只有当依赖发生变化的时候，才会进行重新浸酸。 否则会直接返回缓存结果。提高了性能，减少了不必要的计算。</li></ul></li><li><p>惰性求值</p><ul><li>vue3 中的 compute 采用了惰性求值策略。即只有在实际访问 computed 属性时，才会执行计算函数。这意味着在初始化阶段不会进行计算，只有当实际需要获取计算结果时才会进行计算。这样可以减少初始渲染的计算开销。</li></ul></li><li><p>Composition API 支持</p><ul><li>Vue 3 的 computed 属性与 Composition API 紧密集成。在 Vue 3 中，可以使用 computed 函数来定义 computed 属性，而不仅限于使用对象字面量的形式。这使得在组合式 API 中编写和组织 computed 逻辑更加灵活和可维护。</li></ul></li><li><p>更好的类型推导</p><ul><li>Vue 3 通过 TypeScript 的改进提供了更好的类型推导支持。在 Vue 3 中，根据依赖关系的变化，能够更准确地推导出 computed 属性的类型，并提供更好的类型检查和智能提示。</li></ul></li></ul><h2 id="_4-生命周期" tabindex="-1">4. 生命周期 <a class="header-anchor" href="#_4-生命周期" aria-label="Permalink to &quot;4. 生命周期&quot;">​</a></h2><h3 id="_4-1-vue父组件能够监听到的子组件的生命周期有哪些" tabindex="-1">4.1 vue父组件能够监听到的子组件的生命周期有哪些？ <a class="header-anchor" href="#_4-1-vue父组件能够监听到的子组件的生命周期有哪些" aria-label="Permalink to &quot;4.1 vue父组件能够监听到的子组件的生命周期有哪些？&quot;">​</a></h3><h2 id="_5-组件缓存-keep-alive-怎么做的" tabindex="-1">5. 组件缓存 keep-alive 怎么做的？ <a class="header-anchor" href="#_5-组件缓存-keep-alive-怎么做的" aria-label="Permalink to &quot;5. 组件缓存 keep-alive 怎么做的？&quot;">​</a></h2><h2 id="_6-过滤器使用过吗" tabindex="-1">6. 过滤器使用过吗 <a class="header-anchor" href="#_6-过滤器使用过吗" aria-label="Permalink to &quot;6. 过滤器使用过吗&quot;">​</a></h2><h2 id="_7-slot-插槽的使用" tabindex="-1">7. slot 插槽的使用 <a class="header-anchor" href="#_7-slot-插槽的使用" aria-label="Permalink to &quot;7. slot 插槽的使用&quot;">​</a></h2><h2 id="_8-为什么采用异步渲染" tabindex="-1">8. 为什么采用异步渲染？ <a class="header-anchor" href="#_8-为什么采用异步渲染" aria-label="Permalink to &quot;8. 为什么采用异步渲染？&quot;">​</a></h2><h3 id="_8-1-nexttick-原理及作用" tabindex="-1">8.1 nextTick 原理及作用 <a class="header-anchor" href="#_8-1-nexttick-原理及作用" aria-label="Permalink to &quot;8.1 nextTick 原理及作用&quot;">​</a></h3><h2 id="_9-如何动态的给-vue2-的-data-添加属性值" tabindex="-1">9. 如何动态的给 vue2 的 data 添加属性值？ <a class="header-anchor" href="#_9-如何动态的给-vue2-的-data-添加属性值" aria-label="Permalink to &quot;9. 如何动态的给 vue2 的 data 添加属性值？&quot;">​</a></h2><h3 id="_9-1-如何解决数据更新了-页面没有更新的问题" tabindex="-1">9.1 如何解决数据更新了，页面没有更新的问题 <a class="header-anchor" href="#_9-1-如何解决数据更新了-页面没有更新的问题" aria-label="Permalink to &quot;9.1 如何解决数据更新了，页面没有更新的问题&quot;">​</a></h3><h3 id="_9-2-vue2-data-中的某一个属性发生变化-页面视图会立即执行重新渲染吗" tabindex="-1">9.2 vue2 data 中的某一个属性发生变化，页面视图会立即执行重新渲染吗？ <a class="header-anchor" href="#_9-2-vue2-data-中的某一个属性发生变化-页面视图会立即执行重新渲染吗" aria-label="Permalink to &quot;9.2 vue2 data 中的某一个属性发生变化，页面视图会立即执行重新渲染吗？&quot;">​</a></h3><h2 id="_10-vue2-中如何监听对象或者数组某个值的变化" tabindex="-1">10. vue2 中如何监听对象或者数组某个值的变化？ <a class="header-anchor" href="#_10-vue2-中如何监听对象或者数组某个值的变化" aria-label="Permalink to &quot;10. vue2 中如何监听对象或者数组某个值的变化？&quot;">​</a></h2><h2 id="_11-说一下-template-的实现原理" tabindex="-1">11. 说一下 template 的实现原理 <a class="header-anchor" href="#_11-说一下-template-的实现原理" aria-label="Permalink to &quot;11. 说一下 template 的实现原理&quot;">​</a></h2><h3 id="_11-1-模版编译原理" tabindex="-1">11.1 模版编译原理 <a class="header-anchor" href="#_11-1-模版编译原理" aria-label="Permalink to &quot;11.1 模版编译原理&quot;">​</a></h3><h3 id="_11-2-template-和-jsx-有什么区别" tabindex="-1">11.2 template 和 jsx 有什么区别？ <a class="header-anchor" href="#_11-2-template-和-jsx-有什么区别" aria-label="Permalink to &quot;11.2 template 和 jsx 有什么区别？&quot;">​</a></h3><h3 id="_11-3-什么是-jsx" tabindex="-1">11.3 什么是 jsx? <a class="header-anchor" href="#_11-3-什么是-jsx" aria-label="Permalink to &quot;11.3 什么是 jsx?&quot;">​</a></h3><h2 id="_12-简单说一下-template-到-render-的过程-怎么实现-源码-compiler-的原理" tabindex="-1">12. 简单说一下 template 到 render 的过程，怎么实现？ 源码 compiler 的原理 <a class="header-anchor" href="#_12-简单说一下-template-到-render-的过程-怎么实现-源码-compiler-的原理" aria-label="Permalink to &quot;12. 简单说一下 template 到 render 的过程，怎么实现？ 源码 compiler 的原理&quot;">​</a></h2><h2 id="_13-听过虚拟-dom-吗-在-vue-中怎么体现的" tabindex="-1">13. 听过虚拟 dom 吗 在 vue 中怎么体现的 <a class="header-anchor" href="#_13-听过虚拟-dom-吗-在-vue-中怎么体现的" aria-label="Permalink to &quot;13. 听过虚拟 dom 吗 在 vue 中怎么体现的&quot;">​</a></h2><h2 id="_14-简单说一下-vue-的-diff-算法" tabindex="-1">14. 简单说一下 vue 的 diff 算法 <a class="header-anchor" href="#_14-简单说一下-vue-的-diff-算法" aria-label="Permalink to &quot;14. 简单说一下 vue 的 diff 算法&quot;">​</a></h2><h2 id="_15-异步组件使用过吗-什么场景使用的" tabindex="-1">15. 异步组件使用过吗，什么场景使用的？ <a class="header-anchor" href="#_15-异步组件使用过吗-什么场景使用的" aria-label="Permalink to &quot;15. 异步组件使用过吗，什么场景使用的？&quot;">​</a></h2><h2 id="_16-vue-挂载过程中执行了哪些操作" tabindex="-1">16. vue 挂载过程中执行了哪些操作 <a class="header-anchor" href="#_16-vue-挂载过程中执行了哪些操作" aria-label="Permalink to &quot;16. vue 挂载过程中执行了哪些操作&quot;">​</a></h2><h2 id="_17-vue-组件的-name-属性有什么作用" tabindex="-1">17. vue 组件的 name 属性有什么作用 <a class="header-anchor" href="#_17-vue-组件的-name-属性有什么作用" aria-label="Permalink to &quot;17. vue 组件的 name 属性有什么作用&quot;">​</a></h2><h2 id="_18-怎么在组件中监听路由参数的变化" tabindex="-1">18. 怎么在组件中监听路由参数的变化？ <a class="header-anchor" href="#_18-怎么在组件中监听路由参数的变化" aria-label="Permalink to &quot;18. 怎么在组件中监听路由参数的变化？&quot;">​</a></h2><h2 id="_19-vue-的单项数据流的好处" tabindex="-1">19. vue 的单项数据流的好处？ <a class="header-anchor" href="#_19-vue-的单项数据流的好处" aria-label="Permalink to &quot;19. vue 的单项数据流的好处？&quot;">​</a></h2><h2 id="_20-在哪些生命周期里面可以直接访问到-dom" tabindex="-1">20. 在哪些生命周期里面可以直接访问到 dom? <a class="header-anchor" href="#_20-在哪些生命周期里面可以直接访问到-dom" aria-label="Permalink to &quot;20. 在哪些生命周期里面可以直接访问到 dom?&quot;">​</a></h2><p>在钩子函数 mounted 被调用前，Vue 已经将编译好的模板挂载到页面上，所以在 mounted 中可以访问操作 DOM。</p><h3 id="_20-1-vue3-中什么时候可以访问到-dom-呢" tabindex="-1">20.1 vue3 中什么时候可以访问到 dom 呢 <a class="header-anchor" href="#_20-1-vue3-中什么时候可以访问到-dom-呢" aria-label="Permalink to &quot;20.1 vue3 中什么时候可以访问到 dom 呢&quot;">​</a></h3><h2 id="_21-简单说一下平时为了提升开发效率封装过哪些组件" tabindex="-1">21. 简单说一下平时为了提升开发效率封装过哪些组件？ <a class="header-anchor" href="#_21-简单说一下平时为了提升开发效率封装过哪些组件" aria-label="Permalink to &quot;21. 简单说一下平时为了提升开发效率封装过哪些组件？&quot;">​</a></h2><h2 id="_22-页面首次加载的时候-会触发哪些钩子函数" tabindex="-1">22. 页面首次加载的时候，会触发哪些钩子函数？ <a class="header-anchor" href="#_22-页面首次加载的时候-会触发哪些钩子函数" aria-label="Permalink to &quot;22. 页面首次加载的时候，会触发哪些钩子函数？&quot;">​</a></h2><h2 id="_23-vue-模版样式-scoped-的作用和用法" tabindex="-1">23. vue 模版样式 scoped 的作用和用法 <a class="header-anchor" href="#_23-vue-模版样式-scoped-的作用和用法" aria-label="Permalink to &quot;23. vue 模版样式 scoped 的作用和用法&quot;">​</a></h2><h3 id="_23-1-vue-里面样式穿透的写法" tabindex="-1">23.1 vue 里面样式穿透的写法 <a class="header-anchor" href="#_23-1-vue-里面样式穿透的写法" aria-label="Permalink to &quot;23.1 vue 里面样式穿透的写法&quot;">​</a></h3><h2 id="_24-接口没出来的时候-做过-mock-吗-常见的-mock-语法。" tabindex="-1">24. 接口没出来的时候，做过 mock 吗， 常见的 mock 语法。 <a class="header-anchor" href="#_24-接口没出来的时候-做过-mock-吗-常见的-mock-语法。" aria-label="Permalink to &quot;24. 接口没出来的时候，做过 mock 吗， 常见的 mock 语法。&quot;">​</a></h2><h2 id="_25-vue-自带的动画效果怎么实现的" tabindex="-1">25. vue 自带的动画效果怎么实现的 <a class="header-anchor" href="#_25-vue-自带的动画效果怎么实现的" aria-label="Permalink to &quot;25. vue 自带的动画效果怎么实现的&quot;">​</a></h2><h2 id="_26-data-属性和-methods-方法可以同名吗" tabindex="-1">26. data 属性和 methods 方法可以同名吗 <a class="header-anchor" href="#_26-data-属性和-methods-方法可以同名吗" aria-label="Permalink to &quot;26. data 属性和 methods 方法可以同名吗&quot;">​</a></h2><p>methods 的方法名会被 data 的属性覆盖</p><h2 id="_27-什么是函数式组件-他和-react-的-hook-有什么区别" tabindex="-1">27. 什么是函数式组件？ 他和 react 的 hook 有什么区别？ <a class="header-anchor" href="#_27-什么是函数式组件-他和-react-的-hook-有什么区别" aria-label="Permalink to &quot;27. 什么是函数式组件？ 他和 react 的 hook 有什么区别？&quot;">​</a></h2><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to &quot;&quot;">​</a></h2>',65),i=[l];function h(u,d,n,c,s,m){return e(),t("div",null,i)}const p=a(r,[["render",h]]);export{_ as __pageData,p as default};
